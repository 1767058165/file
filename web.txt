html里面使用alert()括号里面记得使用单引号 --注：外面是大括号
判断IE浏览器////////
IE6,7,8,9支持css添加\9
手机网站--正圆border-radius:50%;*/*左边/右边距离用百分比代替margin 像素值*对于左右相同间距，可以再嵌套一层*//*浮动加百分比*//*绝对元素居中，利用width/2和left等于屏幕一半宽度*/

p元素可以间接嵌套块元素，先嵌套流元素,同时p元素也要定义display:block;

 <a id="js"></a>
 *********
 for/in是js循环对象方法
 
 
js中继承的几种用法总结(apply,call,prototype)
javascript中的对象就是一个指向prototype的指针和一个自身的属性列表

只有构造器才具有prototype属性，原型链继承就是创建一个新的指针，指向构造器的prototype属性。
【prototype实现继承：Person.prototype = new Animal()；//，
不采用Person.prototype  = Animal.prototype，原因Animal自身的this对象的属性没办法传递给Person】

构造器包括: 
1.Object
2.Function
3.Array
4.Date
5.String

js创建数组：创建 Array 对象的语法：
new Array();
new Array(size);
new Array(element0, element1, ..., elementn);

js Array 对象属性
属性	描述
constructor	返回对创建此对象的数组函数的引用。
****************
js 创建对象
person=new Object();
person.firstname="Bill";
person.lastname="Gates";
person.age=56;
person.eyecolor="blue";
**************
三个 CSS 预处理器（框架）：Sass、LESS 和 Stylus

gulp是前端开发过程中对代码进行构建的工具，是自动化项目的构建利器；她不仅能对网站资源进行优化，而且在开发过程中很多重复的任务能够使用正确的工具自动完成；使用她，我们不仅可以很愉快的编写代码，而且大大提高我们的工作效率。

package.json 位于模块的目录下，用于定义包的属性。接下来让我们来看下 express 包的 package.json 文件

使用 npm 命令安装模块
npm 安装 Node.js 模块语法格式如下：
$ npm install <Module Name>
以下实例，我们使用 npm 命令安装常用的 Node.js web框架模块 express:
$ npm install express
安装好之后，express 包就放在了工程目录下的 node_modules 目录中，因此在代码中只需要通过 require('express') 的方式就好，无需指定第三方包路径。
var express = require('express');

list1 li:nth-of-type(odd){ background:#00ccff;}奇数行 
#list1 li:nth-of-type(even){ background:#ffcc00;}偶数行 
#list2 li:nth-child(4n+1){ background:#00ccff;}从第一行开始算起 每隔4个（包含第四个）使用此样式 
#list00000 li:nth-child(4n+2){background:#090;}从第二行开始算起 每隔4个（包含第四个）使用次样式 
#list00000 li:nth-child(4n+3){background:#009;}从第三行开始算起 每隔4个（包含第四个）使用次样式 


html 元素设置disabled属性，其值post不会提交


返回到上一页的html代码：
1、超链接返回上一页。

<a href=”#” onClick=”javascript :history.back(-1);”>返回上一页</a>
<a href=”#” onClick=”javascript :history.go(-1);”>返回上一页</a>

2、按钮返回上一页。

1
<input type=”button” name=”Submit” onclick=”javascript:history.back(-1);” value=”返回上一页”>

————————————————————————————
html5  data-*属性

 @media all and (orientation : landscape){/*屏幕垂直*/}

 @media screen and (orientation:portrait){ /*屏幕水平*/ }
 
 logo尺寸比例121*75
导航用h2
内容页用h3

js cookie过期设置为过去时间

<a> 标签的 rel 属性用于指定当前文档与被链接文档的关系。
用于 <a> 标签的可选属性 rel 和 rev 分别表示源文档与目标文档之间正式的关系和方向。

a标签去除下划线---text-decoration: none;

background-image/background: -webkit-gradient(linear, left bottom, left top, color-stop(0, 

#afd9ee), color-stop(1, #d9edf7));

重置按钮-- <button type="reset" class="btn btn-primary">添加</button>

form onSubmit()事件--s大写

radio按钮,post其value值

复选框提交值获取--通过post获取其value值

cxcalendar.js日期jquery插件
——————————————————————————————————————————————

为form表单添加id属性，在表单外控件添加form属性等于表单id，提交数据。

ajax调试--chrome，network->开启preserve log查看ajax提交的数据。

/*input定义背景色影响输入，可以定义透明色background-color: transparent;也不要定义背景图，会遇到

兼容性*/
	                                
 /* chrome输入框input默认为黄色*/
————————————————————————————————
<form id="myForm"><input type="text" name="d" id="d" required/></form><input type="submit" 

value="提交" form="myForm"/>
提交按钮在form外面，但提交的时候会验证form里面的text的required，当然你把文本框放外面然后加form属

性也可以
——————————————
alert()内容换行，使用\\n
————————————————
js重定向--location.assign("http://www.baidu.com");或

window.location="http://www.baidu.com";或

location.href="http://www.baidu.com";
————————————————————————
   location.reload();刷新
 window.history.go(-2);后退2页
history.back();后退一页
——————————————————————————
/*js中php变量，对其--或者++，会影响变量下次出现的值*/

/*js跳转location.href失误，检查地址是否有误，转向地址默认添加域名*/

/* 注意id与类选择器写法select#role、 select.role*/

;/*location.href获取当前URL*/

   $('#role option[value="<?=$p?>"]').attr("selected","selected");/*选中option*/
————————————————————————————————————————
阻止a标签默认跳转事件
1：<a href="####"></a>

2：<a href="javascript:void(0)"></a>

3：<a href="javascript:void(null)"></a>

4：<a href="#" onclick="return false"></a>

点击链接后，页面会向上滚到页首，# 默认锚点为 #TOP（实际测试发现 滚动条会滚到顶端）而以上四种方法

仅仅表示一个死链接都表示是一个死链接不会跳转也不会返回到顶部.
——————————————————
<input type="value">
属性值
值	描述
button	定义可点击按钮（多数情况下，用于通过 JavaScript 启动脚本）。
checkbox	定义复选框。
file	定义输入字段和 "浏览"按钮，供文件上传。
hidden	定义隐藏的输入字段。
image	定义图像形式的提交按钮。
password	定义密码字段。该字段中的字符被掩码。
radio	定义单选按钮。
reset	定义重置按钮。重置按钮会清除表单中的所有数据。
submit	定义提交按钮。提交按钮会把表单数据发送到服务器。
text	定义单行的输入字段，用户可在其中输入文本。默认宽度为 20 个字符。
————————————————————————————————————————————
{*有时定义的一个js函数，函数一直undefined not function,多是函数名与系统函数冲突*}

前端分页需要一次性获取所有数据，根据页面截取显示，对于大数据量获取会比较慢，而后端相反


Chart.js是一个简单、面向对象、为设计者和开发者准备的图表绘制工具库。
——————————————————————————
location.reload()

下拉列表选中--selected  复选框/单选选中--checked

/*disable表单元素属性，使其提交表单时，不会提交数据，readonly=readonly可以*/

chrome按住刷新按钮，停留几秒，可选择“正常加载/硬性加载/清空缓存并硬性加载”

————————————————————————————————————————————
// 将当前时间换成时间格式字符串
var timestamp3 = 1403058804;
var newDate = new Date();
newDate.setTime(timestamp3 * 1000);

console.log(newDate.toLocaleDateString())
————————————————————————————————————————————————	
使用ajax获取公告数据，$.each(）遍历数据 ，append()/after()/before()
————————————————————————————
/*对于$.ajax()返回类型为json时，js使用.号访问对象元素，使用[]访问数组元素*/


<!-- <a> 标签的 target 属性规定在何处打开链接文档,定义_blank在新窗口打开-->


边框阴影--box-shadow: h-shadow v-shadow blur spread（宽度） color inset;


/*SEO优化：1、网页关键词定义<meta name="keywords" content="">；2、网页描述<meta name="description" content="">*/


React native 是用React的方式开发mobileApp。

React.js主要用于构建UI。

 <meta name="keywords" content="{$data['key']}" />
 <meta name="description" content="{$data['des']}"/>


why？call,apply,bind干什么的？为什么要学这个？---一般用来指定this的环境

　　————————————————————————————————————————————
AngularJS[1]  诞生于2009年，由Misko Hevery 等人创建，后为Google所收购。是一款优秀的前端JS框架，已经被用于Google的多款产品当中。AngularJS有着诸多特性，最为核心的是：MVC、模块化、自动化双向数据绑定、语义化标签、依赖注入等等。


TypeScript是一种由微软开发的自由和开源的编程语言。它是JavaScript的一个超集，生成的js可以兼容大部分浏览器

<!--node运行需要服务器先开启noode服务器，-->

————————————————————————
************文字图片垂直居中*****************
.wz li{margin-bottom: 40px;text-align: right;}
 .wz img{vertical-align: middle;}
 .wz p{display: inline-block;text-align: justify;vertical-align: middle;}


  <ul class="wz">
          <li >
            <img src="http://www.baidiqing.com/src/free_01.jpg" alt="背景">
            <p style="width:585px">
              佰迪清小巧的外形设计，不管是背包、抽屉或口袋，都能轻松收藏，随时取用，再
也不用为临时的约会和紧张的洽谈而手中无措。人性化的喷雾式设计，只需轻轻一
按，即可均匀覆盖，快速渗透起效，令腋下清爽留香。
            </p>
          </li>
          <li>
            <img src="http://www.baidiqing.com/src/free_02.jpg" alt="背景">
            <p  style="width:401px">
              佰迪清小巧的外形设计，不管是背包、抽屉或口袋，都能轻松收藏，随时取用，再
也不用为临时的约会和紧张的洽谈而手中无措。人性化的喷雾式设计，只需轻轻一
按，即可均匀覆盖，快速渗透起效，令腋下清爽留香。
            </p>
          </li>
          <li>
            <img src="http://www.baidiqing.com/src/free_03.jpg" alt="背景">
            <p  style="width:365px">
              佰迪清小巧的外形设计，不管是背包、抽屉或口袋，都能轻松收藏，随时取用，再
也不用为临时的约会和紧张的洽谈而手中无措。人性化的喷雾式设计，只需轻轻一
按，即可均匀覆盖，快速渗透起效，令腋下清爽留香。
            </p>
          </li>
          <li>
            <img src="http://www.baidiqing.com/src/free_04.jpg" alt="背景">
            <p  style="width:401px">
              佰迪清小巧的外形设计，不管是背包、抽屉或口袋，都能轻松收藏，随时取用，再
也不用为临时的约会和紧张的洽谈而手中无措。人性化的喷雾式设计，只需轻轻一
按，即可均匀覆盖，快速渗透起效，令腋下清爽留香。
            </p>
          </li>
        </ul>
*****************************************************************************
  <img style="vertical-align:text-bottom" src="http://www.baidiqing.com/src/num_01.jpg" alt="图片" > --text-bottom	把元素的底端与父元素字体的底端对齐。
——————————————————————————
/*button文本定义在标签之间*/

/*img浮动与img同级div内容会围绕img排列*/

// jquery判断设备垂直或水平旋转时
	$(window).bind( 'orientationchange', function(e){
	  
  });
——————————————————————————————
font: 700 12px/17px Arial;17px为行高

line-height: 取值--倍数、百分比、px值

/*-webkit-transition: transform .2s ease-in; transition使用transform作为其属性值*/

visibility: hidden
——————————————————————
display: inline-block;/*文字垂直居中*/
	vertical-align: middle;
————————————————————
用线性渐变创建图像。
如果想创建以对角线方式渐变的图像，可以使用 to top left 这样的多关键字方式来实现。
用默认的渐变方向绘制一个最简单的线性渐变
示例代码：

（图一）
linear-gradient(#fff, #333);
linear-gradient(to bottom, #fff, #333);
linear-gradient(to top, #333, #fff);
linear-gradient(180deg, #fff, #333);
linear-gradient(to bottom, #fff 0%, #333 100%);
——————————————————————————————————————
<!-- figure为块元素 -->
————————————————————————
vertical-align取值：<!-- vertical-align该属性应用于行内元素 -->

baseline	默认。元素放置在父元素的基线上。
sub	垂直对齐文本的下标。
super	垂直对齐文本的上标
top	把元素的顶端与行中最高元素的顶端对齐
text-top	把元素的顶端与父元素字体的顶端对齐
middle	把此元素放置在父元素的中部。
bottom	把元素的顶端与行中最低的元素的顶端对齐。
text-bottom	把元素的底端与父元素字体的底端对齐。
length	 
%	使用 "line-height" 属性的百分比值来排列此元素。允许使用负值。
inherit	规定应该从父元素继承 vertical-align 属性的值。
————————————————————————————————————
white-space:nowrap;不换行

/* google调试窗口选中元素右键可复制copy-copy-selector */

 <!-- <i>、<b>、<em>、<label>标签使用 -->
————————————————————————————————
form 属性的值必须是其所属表单的 id。

<!DOCTYPE HTML>
<html>
<body>

<form action="/example/html5/demo_form.asp" method="get" id="form1">
First name: <input type="text" name="fname" /><br />
<input type="submit" value="提交" />
</form>

<p>下面的 "Last name" 字段位于 form 元素之外，但仍然是表单的一部分。</p>

Last name: <input type="text" name="lname" form="form1" />

</body>
</html>
————————————————————————————————————————
list-style-type:circle;
——————————————————————————
:nth-child(n) 选择器匹配属于其父元素的第 N 个子元素，不论元素的类型。
n 可以是数字、关键词或公式。

实例 1
Odd 和 even 是可用于匹配下标是奇数或偶数的子元素的关键词（第一个子元素的下标是 1）。
在这里，我们为奇数和偶数 p 元素指定两种不同的背景色：
p:nth-child(odd)
{
background:#ff0000;
}
p:nth-child(even)
{
background:#0000ff;
}
亲自试一试
实例 2
使用公式 (an + b)。描述：表示周期的长度，n 是计数器（从 0 开始），b 是偏移值。
在这里，我们指定了下标是 3 的倍数的所有 p 元素的背景色：
p:nth-child(3n+0)
{
background:#ff0000;
}
————————————————————————————————————————————————
 使用相对定位realtive及z-index实现覆盖，不局限于绝对定位
 
 去掉之间的间隔空隙，在<table align='center' style="border-collapse:collapse;"></table>
 可以去掉td之间的间隔。
 
 div包含图片与文字，定义ver-ticall
 
 inline-block可嵌套block
 
 ——————————————————————————————
 用于图片文字列表
 <figure>
  <figcaption>黄浦江上的的卢浦大桥</figcaption>
  <img src="shanghai_lupu_bridge.jpg" width="350" height="234" />
</figure>
——————————————————————————
图片水平居中：
.part1_header .zmd_banner{overflow: hidden; position:relative;}
.part1_header .zmd_banner ul{position:absolute;left:50%;}
.part1_header .zmd_banner img{max-width:1920px;text-align:center;margin-left:-960px;;}


表单元素 form="form2"，指向id="form2  <form>表单

网络请求最后的时间在下方


    框架：<a href="users.php?act=list" target="main-frame">框架跳转使用target=“框架名”
    无缘无故浮动左边多出大空隙，多是由于上层浮动元素换行引起的
