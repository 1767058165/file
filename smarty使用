下载的文档内容为空，在左侧隐藏，拖动左边框即可

assign();--方法变量赋值，可传递变量、数组、对象

display()--调用模板，指定文件名后缀

一些需要php函数地方，在程序进行输出，传值给模板输出

{include file='./page_footer.tpl'}--用于在当前模板中包含其它模板
————————————————————————————————————————————
{literal}标签区域内的数据将按字面意思处理，代表性地是用在javascript/css语块周围，不然这些语言使
用的花括号‘{’、‘}’会干扰模版定界符语法。{literal}{/literal}标签里面的所有符号不会被解释，全
部按原样输出。
————————————————————————————————————————————————
{if}{elseif}{else} 条件

随着一些特性加入到模版引擎，Smarty的{if}语句与php的if语句一样富有弹性。每一个{if}必须与一个{/if}

成对出现，允许使用{else}和{elseif}，所有php条件和函数在这里同样适用，诸如||、or、&&、and、

is_array()等等。
——————————————————————————————————————————
数组可以这样调用--{$data.exit}或者{$data['exit']}


在$cache_dir下的文件，文件名与模板名称相似。 虽然这些文件也有.php后缀，但它们不会被直接执行。请

不要编辑这些文件！
每个缓存页面都有一个缓存过期时间$cache_lifetime。 默认是3600秒，也就是一小时。 当超过了此时间，

缓存将被重新生成。 当设置$caching为Smarty::CACHING_LIFETIME_SAVED时，可以给每个缓存设置其单独的

缓存时间。 参见$cache_lifetime。
——————————————————————————————————
继承是从面向对象编程而来的概念，模板继承可以让你定义一个或多个父模板，提供给子模板来进行扩展。 

扩展继承意味着子模板可以覆盖部分或全部父模板的块区域。块区域使用name进行区分，{block 

name="content"}{/block}
——————————————————————————
从配置文件获取的变量
从配置文件获取的变量，可以通过 井号引用起来访问如#hash_marks#， 或者通过Smarty变量 

$smarty.config来访问。 后者在使用其他属性或者是访问别的变量值时比较有用，如$smarty.config.$foo。

{config_load} 载入段落配置变量--{config_load file='example.conf' section='Customer'}

————————————————————————
循环对象--
{foreach $data.grade as $t }

<option value="{$t->id}">{$t->grade_name}</option>

{/foreach}
——————————————————————————————————
变量调节器
{$item->limit_time|date_format}
————————————————————————————
{if 条件}{elseif 条件}与条件之间不要忘加空格，条件可使用php代码
————————————————————————————
<{$time|date_format:'%Y-%m-%d %H:%M:%S'}> ，同样对应的输出格式为：“年-月-日 时：分：秒”。
——————————————————————
default使用：{$item->department_name|default:"未指定"}
——————————————
模板继承，程序有错，布局会出现问题
————————————————————————————
{$smarty.session.变量名}---调用session


