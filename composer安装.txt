1.下载composer.phar文件
2.设置php全局环境变量
3、执行PHP composer.phar install
4.查看是否安装成功如下：

Windows 系统：

找到并进入 PHP 的安装目录（和你在命令行中执行的 php 指令应该是同一套 PHP）。
将 composer.phar 复制到 PHP 的安装目录下面，也就是和 php.exe 在同一级目录。
在 PHP 安装目录下新建一个 composer.bat 文件，并将下列代码保存到此文件中。
@php "%~dp0composer.phar" %*
最后重新打开一个命令行窗口试一试执行 composer --version 看看是否正确输出版本号。

composer -v 查看是否安装成功
安装包--composer require 包名，例如composer require illuminate/support
_______________________________

安装依赖
安装依赖非常简单，只需在项目目录下运行：

composer install  
____________________________
自动加载
Composer 提供了自动加载的特性，只需在你的代码的初始化部分中加入下面一行：

require 'vendor/autoload.php'; 
**************************
只想更新某个特定的库，不想更新它的所有依赖，很简单：

composer update foo/bar 

例如想安装 yiisoft/yii2-imagine 扩展，可按如下示例修改你的 composer.json 文件：

{
    // ...

    "require": {
        // ... other dependencies

        "yiisoft/yii2-imagine": "*"
    }
}
_____________________________________
Composer 安装工具以及执行 composer self-update 指令都会默认安装最新的 Composer 稳定版本。
————————————————————————————
安装依赖
安装依赖非常简单，只需在项目目录下运行：composer install  


composer.json--声明依赖关系
——————————————————
使用 Composer

现在我们将使用 Composer 来安装项目的依赖。如果在当前目录下没有一个 composer.json 文件，请查看基本用法章节。

要解决和下载依赖，请执行 install 命令：

php composer.phar install
如果你进行了全局安装，并且没有 phar 文件在当前目录，请使用下面的命令代替：

composer install
继续 上面的例子，这里将下载 monolog 到 vendor/monolog/monolog 目录。
